FROM nvcr.io/nvidia/pytorch:24.02-py3

ARG USERNAME=<<user>>
ARG WORKING_DIR=<<working-dir>>
ARG USER_UID=<<uid>>
ARG USER_GID=<<gid>>
ARG POETRY_VERSION=<<poetry-version>>

SHELL ["/bin/bash", "-c"]

# Use a non-root user
ARG USER_UID=${USER_UID}
ARG USER_GID=${USER_GID}

# Let our user use the base python install, no venv
# NOTE: Slow part of build, consider using venv instead and removing this line
RUN chmod +777 -R ${PYTHON_PARENT_DIR}

# Create the user
RUN groupadd --gid $USER_GID ${USERNAME} \
    && useradd --uid $USER_UID --gid $USER_GID -m ${USERNAME}

RUN mkdir ${WORKING_DIR}/ && \
    chown -R $USER_GID:$USER_UID ${WORKING_DIR}

# Install git/ssh/tmux
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    git ssh tmux vim curl htop sudo unzip

# Give sudo privledges  to user
RUN echo ${USERNAME} ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/${USERNAME} \
    && chmod 0440 /etc/sudoers.d/${USERNAME}

# Install poetry
# https://python-poetry.org/docs/configuration/#using-environment-variables
USER ${USERNAME}
ENV POETRY_VERSION="${POETRY_VERSION}" \
    POETRY_HOME="/home/${USERNAME}/poetry" \
    POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=false \
    POETRY_VIRTUALENVS_CREATE=false \
    WORKING_DIR=${WORKING_DIR} \
    PATH="/home/${USERNAME}/poetry/bin:${PATH}"

# Optional ENVs if you prefer to build a venv in docker image.
# POETRY_VIRTUALENVS_CREATE=true \
# BUILD_PATH="/home/${USERNAME}/build" \
# VENV_PATH="/home/${USERNAME}/build/.venv" \
# VIRTUAL_ENV=$VENV_PATH

# Additional steps for building to venv
# ENV PATH="$VENV_PATH/bin:$PATH"
# RUN mkdir ${BUILD_PATH}
# WORKDIR ${BUILD_PATH}

# If not using venv, we move to workdir and build there
WORKDIR ${WORKING_DIR}

RUN curl -sSL https://install.python-poetry.org | python3 - && exec bash

# Install project requirements 
COPY ./ ./
RUN pip install --upgrade pip && \
    poetry install -vvv --no-root

WORKDIR $WORKING_DIR
